{"id":"javascript/shaders/areaFence/fragment.glsl","dependencies":[{"name":"/Users/nielskonrad/Development/dev-konrad/land/package.json","includedInParent":true,"mtime":1577083198588}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float uTime;\\nuniform float uBorderAlpha;\\nuniform float uStrikeAlpha;\\n\\nvarying vec3 vPosition;\\nvarying vec3 vModelPosition;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n    float uStrikeWidth = 0.5;\\n    // float uStrikeAlpha = 0.25;\\n    float uBorderWidth = 0.1;\\n    // float uBorderAlpha = 0.5;\\n\\n    if(vModelPosition.z < 0.0)\\n    {\\n        discard;\\n    }\\n\\n    float strikeStrength = mod((vPosition.x + vPosition.y - uTime * 0.00035 + vPosition.z) / uStrikeWidth * 0.5, 1.0);\\n    strikeStrength = step(strikeStrength, 0.5) * uStrikeAlpha;\\n\\n    float borderStrength = max(step(1.0 - vUv.y, uBorderWidth), step(vUv.y, uBorderWidth)) * uBorderAlpha;\\n\\n    float alpha = max(strikeStrength, borderStrength);\\n\\n    gl_FragColor = vec4(vec3(1.0), alpha);\\n\\n    // gl_FragColor = vec4(vUv, 1.0, 1.0);\\n}\\n\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"javascript/shaders/areaFence/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"javascript/shaders/areaFence/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"javascript/shaders/areaFence/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"javascript/shaders/areaFence/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"javascript/shaders/areaFence/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":858},"source":"javascript/shaders/areaFence/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"javascript/shaders/areaFence/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float uTime;\\nuniform float uBorderAlpha;\\nuniform float uStrikeAlpha;\\n\\nvarying vec3 vPosition;\\nvarying vec3 vModelPosition;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n    float uStrikeWidth = 0.5;\\n    // float uStrikeAlpha = 0.25;\\n    float uBorderWidth = 0.1;\\n    // float uBorderAlpha = 0.5;\\n\\n    if(vModelPosition.z < 0.0)\\n    {\\n        discard;\\n    }\\n\\n    float strikeStrength = mod((vPosition.x + vPosition.y - uTime * 0.00035 + vPosition.z) / uStrikeWidth * 0.5, 1.0);\\n    strikeStrength = step(strikeStrength, 0.5) * uStrikeAlpha;\\n\\n    float borderStrength = max(step(1.0 - vUv.y, uBorderWidth), step(vUv.y, uBorderWidth)) * uBorderAlpha;\\n\\n    float alpha = max(strikeStrength, borderStrength);\\n\\n    gl_FragColor = vec4(vec3(1.0), alpha);\\n\\n    // gl_FragColor = vec4(vUv, 1.0, 1.0);\\n}\\n\";"},"lineCount":null}},"error":null,"hash":"053e4937b5fb406f7937d9b29739c814","cacheData":{"env":{}}}